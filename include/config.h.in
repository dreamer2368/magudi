#ifndef CONFIG_H
#define CONFIG_H

#define SAFE_DEALLOCATE(x) if (allocated(x)) deallocate(x)

#define PROJECT_NAME "@PROJECT_NAME@"
#define STRING_LENGTH 256

#ifdef __GFORTRAN__
#define STRINGIFY(x) "x"
#else
#define XSTRINGIFY(s) STRINGIFY(s)
#define STRINGIFY(s) #s
#endif

#ifndef NDEBUG
#define assert(x) call assertImpl((x), STRINGIFY(x), __FILE__, __LINE__)
#define assert_key(x, y) \
  select case (x); \
  case y;          \
  case default;    \
  call assertImpl(.false., STRINGIFY(x) // " is not in " // adjustl(STRINGIFY(y)), \
                  __FILE__, __LINE__); \
  end select
#else
#define assert(x) if (.false.) then; end if
#define assert_key(x, y) if (.false.) then; end if
#endif

#ifdef USE_EXTENDED_PLOT3D
#define _LARGEFILE64_SOURCE  1
#define _FILE_OFFSET_BITS   64
#define SIZEOF_PLOT3D_OFF    8
#else
#define SIZEOF_PLOT3D_OFF    4
#endif

#ifdef SCALAR_TYPE_IS_real32_iso
#define SCALAR_KIND     selected_real_kind(6)
#define SIZEOF_SCALAR   4
#define SCALAR_FORMAT   "(SP,ES13.6E2)"
#define SCALAR_TYPE_MPI MPI_REAL
#endif

#ifdef SCALAR_TYPE_IS_real64_iso
#define SCALAR_KIND     selected_real_kind(15)
#define SIZEOF_SCALAR   8
#define SCALAR_FORMAT   "(SP,ES23.15E3)"
#define SCALAR_TYPE_MPI MPI_REAL8
#endif

#ifdef SCALAR_TYPE_IS_binary128_IEEE754
#define SCALAR_KIND     selected_real_kind(33)
#define SIZEOF_SCALAR   16
#define SCALAR_FORMAT   "(SP,ES42.33E4)"
#define SCALAR_TYPE_MPI MPI_REAL16
#endif

#endif
